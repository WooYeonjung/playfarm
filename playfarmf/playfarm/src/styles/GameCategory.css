.category_container {
    flex: 1;

    margin: 10px;
}

.category_container h3 {
    margin: 10px 0;
}

.category_container hr {
    margin-top: 10px;
}

/* checkbox area*/

/* <div class="checkbox-wrapper">
  <span class="checkbox">
    <input type="checkbox" />
    <svg>
      <use xlink:href="#checkbox-30" class="checkbox"></use>
    </svg>
  </span>
  <svg xmlns="http://www.w3.org/2000/svg" style="display:none">
    <symbol id="checkbox-30" viewBox="0 0 22 22">
      <path fill="none" stroke="currentColor" d="M5.5,11.3L9,14.8L20.2,3.3l0,0c-0.5-1-1.5-1.8-2.7-1.8h-13c-1.7,0-3,1.3-3,3v13c0,1.7,1.3,3,3,3h13 c1.7,0,3-1.3,3-3v-13c0-0.4-0.1-0.8-0.3-1.2"/>
    </symbol>
  </svg>
</div> */

.checkbox-wrapper .checkbox {
    --bg: #fff;
    --brdr: #d1d6ee;
    --brdr-actv: #1e2235;
    --brdr-hovr: #bbc1e1;
    --dur: calc((var(--size, 2)/2) * 0.6s);
    display: inline-block;
    width: calc(var(--size, 1) * 22px);
    position: relative;
}

.checkbox-wrapper .checkbox:after {
    content: "";
    width: 100%;
    padding-top: 100%;
    display: block;
}

.checkbox-wrapper .checkbox>* {
    position: absolute;
}

.checkbox-wrapper .checkbox input {
    -webkit-appearance: none;
    -moz-appearance: none;
    -webkit-tap-highlight-color: transparent;
    cursor: pointer;
    background-color: var(--bg);
    border-radius: calc(var(--size, 1) * 4px);
    border: calc(var(--newBrdr, var(--size, 1)) * 1px) solid;
    color: var(--newBrdrClr, var(--brdr));
    outline: none;
    margin: 0;
    padding: 0;
    transition: all calc(var(--dur) / 3) linear;
}

.checkbox-wrapper .checkbox input:hover,
.checkbox-wrapper .checkbox input:checked {
    --newBrdr: calc(var(--size, 1) * 2);
}

.checkbox-wrapper .checkbox input:hover {
    --newBrdrClr: var(--brdr-hovr);
}

.checkbox-wrapper .checkbox input:checked {
    --newBrdrClr: var(--brdr-actv);
    transition-delay: calc(var(--dur) /1.3);
}

.checkbox-wrapper .checkbox input:checked+svg {
    --dashArray: 16 93;
    --dashOffset: 109;
}

.checkbox-wrapper .checkbox svg {
    fill: none;
    left: 0;
    pointer-events: none;
    stroke: var(--stroke, var(--border-active));
    stroke-dasharray: var(--dashArray, 93);
    stroke-dashoffset: var(--dashOffset, 94);
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 2px;
    top: 0;
    transition: stroke-dasharray var(--dur), stroke-dashoffset var(--dur);
}

.checkbox-wrapper .checkbox svg,
.checkbox-wrapper .checkbox input {
    display: block;
    height: 100%;
    width: 100%;
}

/* label */
.checkbox-wrapper {
    display: inline-flex;
    margin-left: 5px;
}

.checkbox-label {
    cursor: pointer;
    font-size: 17px;
    margin-right: 4px;
}

/* theme color */
.dark .checkbox-label {
    color: #fff;
}

.dark .checkbox-wrapper .checkbox {
    --bg: #dedddd;
    --brdr: #d1d6ee;
    --brdr-actv: #1e2235;
    --brdr-hovr: #bbc1e1;
}

.dark .category_container>h2 {
    color: #fff;
}

.dark .category_container h3 {
    color: #fff;
}


/* type에 따른 구분 css */
.category_container div:nth-of-type(1),
.category_container div:nth-of-type(2),
.category_container div:nth-of-type(3) {
    /* border-bottom: 1px solid; */
    margin-right: 0;
}

.category_container div:nth-child(1) {
    margin-bottom: 20px;
}
.category_container div:nth-child(3) {
    margin-right: 2px;
}

@media (min-width: 1441px) {
    .category_container div:nth-child(3) {
        margin-right: 5px;
    }
  }